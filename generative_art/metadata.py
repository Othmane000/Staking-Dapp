import json
  
# format of nft json metadata :
 #   {
 # "description": "", 
 # "external_url": "", 
 # "image": "ipfs link", 
 # "name": "Dave Starbelly",
 # "attributes": [ ... ]
#   }

# Data to be written
def retrieve_data2_json(l_data):
    for i in range(50):
        dictionary ={
        "description": "Generative piece of art", 
        "external_url": "", 
        "image": f"https://gateway.pinata.cloud/ipfs/QmfPpQt2twQciNiDh5SgEKwx6jNXrLUvUtEJEtJuqJDSCf/{i+1}.jpeg", 
        "name": f"# {i}",
        "attributes": [
                {
            "trait_type":"number of lines",
            "value":f"{l_data[0][i]}"
                },
                {
            "trait_type":"background color",
            "value":f"{l_data[1][i]}"
                },
                {
            "trait_type":"range of color",
            "value":f"{l_data[2][i][0],l_data[2][i][1]}"
                }
        ]
        }

        with open(f"metadata\\{i+1}.json", "w") as file:
            json.dump(dictionary, file)


if __name__ == "__main__":
    data = [[35, 23, 17, 40, 38, 36, 12, 38, 40, 36, 35, 39, 36, 29, 25, 29, 37, 17, 38, 39, 24, 10, 12, 12, 22, 35, 25, 39, 12, 17, 13, 35, 16, 11, 25, 37, 12, 35, 35, 21, 36, 11, 33, 18, 18, 19, 23, 12, 26, 30],
     [(122, 159, 26), (251, 199, 130), (78, 33, 163), (170, 69, 193), (193, 255, 150), (103, 147, 151), (15, 39, 16), (98, 66, 2), (229, 243, 34), (204, 40, 157), (64, 170, 248), (31, 12, 84), (137, 219, 56), (143, 197, 157), (236, 58, 112), (174, 222, 138), (223, 102, 36), (251, 227, 164), (175, 37, 26), (118, 202, 8), (240, 230, 128), (18, 114, 222), (36, 15, 146), (36, 226, 223), (156, 7, 245), (38, 59, 42), (148, 117, 138), (135, 156, 70), (32, 18, 219), (161, 74, 117), (168, 144, 128), (84, 253, 61), (218, 168, 156), (16, 78, 125), (116, 246, 221), (239, 90, 31), (155, 143, 69), (236, 17, 244), (168, 224, 69), (201, 123, 101), (215, 208, 247), (1, 236, 164), (143, 58, 88), (220, 163, 94), (230, 124, 231), (58, 132, 238), (62, 23, 125), (99, 155, 236), (184, 176, 163), (220, 55, 103)],
      [((5, 48, 169), (253, 63, 8)), ((3, 78, 135), (218, 206, 92)), ((23, 190, 100), (252, 96, 66)), ((0, 157, 246), (254, 121, 210)), ((5, 115, 212), 
(249, 231, 209)), ((23, 195, 233), (254, 141, 159)), ((22, 184, 90), (235, 52, 98)), ((3, 52, 246), (254, 157, 177)), ((1, 101, 5), (252, 41, 104)), ((17, 97, 112), (251, 202, 100)), ((0, 171, 91), (246, 143, 107)), ((0, 219, 187), (246, 229, 185)), ((0, 131, 92), (248, 58, 171)), ((7, 244, 39), (247, 28, 97)), ((11, 43, 193), (251, 150, 17)), ((2, 102, 199), (253, 223, 65)), ((2, 254, 129), (243, 46, 181)), ((3, 110, 30), (238, 197, 76)), ((18, 106, 114), (246, 126, 180)), ((7, 55, 60), (247, 112, 211)), ((10, 194, 52), (225, 191, 234)), ((9, 186, 11), (197, 7, 243)), ((1, 249, 63), (236, 245, 78)), ((8, 209, 242), (223, 137, 52)), ((1, 147, 55), (245, 255, 233)), ((3, 88, 222), (253, 113, 147)), ((4, 171, 213), (251, 244, 154)), ((6, 89, 110), (218, 15, 150)), ((3, 246, 93), (250, 251, 25)), ((14, 226, 244), (246, 185, 254)), ((14, 103, 186), (247, 167, 205)), ((13, 135, 207), (254, 156, 121)), ((6, 132, 189), (251, 253, 213)), ((11, 22, 82), (253, 133, 237)), ((20, 29, 134), (253, 156, 6)), ((11, 140, 179), (254, 230, 122)), ((18, 199, 126), (249, 137, 217)), ((0, 114, 35), (244, 199, 246)), ((6, 203, 120), (251, 83, 99)), ((22, 213, 187), (253, 151, 253)), ((12, 160, 163), (255, 47, 255)), ((0, 146, 248), (230, 237, 208)), ((6, 15, 229), (243, 75, 36)), ((8, 43, 240), (252, 46, 195)), ((9, 213, 79), (219, 48, 49)), ((46, 105, 227), (255, 146, 214)), ((2, 1, 91), (252, 96, 101)), ((63, 211, 46), (247, 203, 243)), ((5, 134, 84), (254, 62, 140)), ((0, 116, 175), (243, 227, 39))]] # change this by whats is returned by output of generative_art.py
    retrieve_data2_json(data)




#  return [num_lines, l_bg_color, l_line_color] 